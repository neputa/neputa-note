;(function () {
  const t = document.createElement('style')
  ;(t.innerHTML =
    '\n    .custom-dialog {\n      color: #fff;\n      overflow: auto;\n      max-width: 80%;\n      max-height: 80%;\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      padding: 20px;\n      background-color: #171717;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n      z-index: 10000;\n      font-size:14px;\n    }\n    .custom-dialog-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.4);\n      z-index: 9999;\n    }\n    .custom-dialog-close {\n      float: right;\n      cursor: pointer;\n    }\n  '),
    document.head.appendChild(t)
  const e = () => document.title,
    n = (t) => {
      const e = document.querySelector(`meta[property='${t}']`)
      return e ? e.getAttribute('content') : void 0
    },
    o = {
      title: n('og:title') || e(),
      desp: n('og:description') || '',
      url: document.URL,
      domain: location.host
    },
    r = (t) =>
      t.replace(/["'\\\n\r]/g, function (t) {
        switch (t) {
          case '"':
            return '&quot;'
          case "'":
            return '&#39;'
          case '\\':
            return '\\\\'
          case '\n':
          case '\r':
            return ''
          default:
            return t
        }
      }),
    c = `\n    &lt;BlogCard\n    title="${r(o.title)}"\n    description="${r(o.desp)}"\n    url='${o.url}'\n    domain='${o.domain}' /&gt;\n  `,
    a = document.createElement('div')
  a.className = 'custom-dialog-overlay'
  const i = document.createElement('div')
  ;(i.className = 'custom-dialog'),
    (i.innerHTML = `<pre>${c}</pre><button class="custom-dialog-close">閉じる</button>`),
    a.appendChild(i),
    document.body.appendChild(a),
    (i.querySelector('.custom-dialog-close').onclick = () => {
      document.body.removeChild(a)
    }),
    navigator.clipboard
      .writeText(c.trim().replace('&lt;', '<').replace('&gt;', '>'))
      .then(() => {
        alert('コピーしました')
      })
      .catch((t) => {
        alert('コピーに失敗しました: ', t)
      })
})()
