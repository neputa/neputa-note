---
import { siteConfig } from '@/site-config'
import '../styles/global.css'
import { ClientRouter } from 'astro:transitions'
import Favicons from '@/components/meta/Favicons'

export interface Props {
  title: string
  description?: string
  ogImage?: string | undefined
  articleDate?: string | undefined
  modifiedDate?: string | undefined
}

const {
  title,
  description = siteConfig.description,
  ogImage,
  articleDate,
  modifiedDate
} = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const socialImageURL = new URL(ogImage ? ogImage : '/open-graph.png', Astro.url).href

const titleSeparator = ' - '

const siteTitle =
  canonicalURL.href === Astro.site?.href
    ? siteConfig.title
    : `${title} ${titleSeparator} ${siteConfig.title}`

// Analytics availability (used to gate connection hints)
const gaId: string | undefined = import.meta.env.VITE_GA_ID ?? process.env.VITE_GA_ID
---

<!-- Global Metadata -->
<meta charset='utf-8' />
<meta name='viewport' content='width=device-width, initial-scale=1.0' />
<meta name='theme-color' content='#EE8A85' />
<link href='/sitemap-index.xml' rel='sitemap' />
<Favicons />
<meta name='generator' content={Astro.generator} />

<!-- DNS Prefetch -->
{
  gaId && (
    <>
      <link rel='dns-prefetch' href='//www.google-analytics.com' />
      <link rel='dns-prefetch' href='//www.googletagmanager.com' />
    </>
  )
}
<!-- fonts dns-prefetch is handled in PerformanceOptimizer to avoid duplication -->

<!-- Preconnect for critical third-party origins -->
{
  gaId && (
    <>
      <link rel='preconnect' href='https://www.google-analytics.com' crossorigin />
      <link rel='preconnect' href='https://www.googletagmanager.com' crossorigin />
    </>
  )
}
<!-- Removed same-origin preconnects ('/' and '/pagefind/') as they provide negligible benefit -->

<!-- theme-color already set above; duplicate removed -->
<meta name='color-scheme' content='light dark' />

<!-- Service Worker Registration -->
<script>
  if ('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
      navigator.serviceWorker
        .register('/sw-optimized.js')
        .then((registration) => {
          console.log('üöÄ SW registered:', registration.scope)
        })
        .catch((error) => {
          console.log('‚ùå SW registration failed:', error)
        })
    })
  }
</script>

<!-- Canonical URL -->
<link rel='canonical' href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{siteTitle}</title>

<!-- ClientRouter with optimization for forced reflow reduction -->
<ClientRouter fallback='none' />

<!-- View Transitions optimization script to reduce forced reflows -->
<script>
  // View Transitions„ÅÆÂº∑Âà∂„É™„Éï„É≠„ÉºËªΩÊ∏õ„Çπ„ÇØ„É™„Éó„Éà
  document.addEventListener('astro:before-preparation', () => {
    // „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ââç„Å´‰∏çË¶Å„Å™Ë®àÁÆó„Çí„Éê„ÉÉ„ÉÅÂá¶ÁêÜ
    if (typeof requestIdleCallback !== 'undefined') {
      requestIdleCallback(() => {
        // „Ç¢„Ç§„Éâ„É´ÊôÇÈñì‰∏≠„Å´„É¨„Ç§„Ç¢„Ç¶„ÉàË®àÁÆó„Çí‰∫ãÂâçÂÆüË°å
        document.body.offsetHeight // Âº∑Âà∂„É¨„Ç§„Ç¢„Ç¶„ÉàÂÆüË°å
      })
    }
  })

  document.addEventListener('astro:after-swap', () => {
    // „Éö„Éº„Ç∏ÈÅ∑ÁßªÂæå„ÅÆ„É¨„Ç§„Ç¢„Ç¶„ÉàÂá¶ÁêÜ„ÇíÊúÄÈÅ©Âåñ
    requestAnimationFrame(() => {
      // ‰∏ÄÂ∫¶„ÅÆ„Éï„É¨„Éº„É†ÂÜÖ„Åß„É¨„Ç§„Ç¢„Ç¶„ÉàÈñ¢ÈÄ£„ÅÆÂá¶ÁêÜ„ÇíÂÆå‰∫Ü
      const persistedElements = document.querySelectorAll('[data-astro-transition-persist]')
      persistedElements.forEach((el) => {
        if (el instanceof HTMLElement && el.style) {
          el.style.transform = el.style.transform // Âº∑Âà∂ÂÜçË®àÁÆó„ÇíÈò≤„Åê
        }
      })
    })
  })
</script>

<!-- SEO -->
<meta name='title' content={siteTitle} />
<meta name='description' content={description} />
<meta name='author' content={siteConfig.author} />
<meta name='robots' content='index, follow' />
<meta name='language' content='ja' />
<meta name='format-detection' content='telephone=no' />

<!-- Open Graph / Facebook -->
<meta property='og:type' content={articleDate ? 'article' : 'website'} />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
<meta property='og:image' content={socialImageURL} />
{
  articleDate && (
    <>
      <meta property='article:author' content={siteConfig.author} />
      <meta property='article:published_time' content={articleDate} />
    </>
  )
}
{
  modifiedDate && (
    <>
      <meta property='article:modified_time' content={modifiedDate} />
    </>
  )
}

<!-- Twitter -->
<meta property='twitter:card' content='summary_large_image' />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
<meta property='twitter:image' content={socialImageURL} />

<!-- RSS auto-discovery -->
<link rel='alternate' type='application/rss+xml' title={siteConfig.title} href='/rss.xml' />
