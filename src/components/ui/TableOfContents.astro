---
import TabletOfContentsHeading from './TabletOfContentsHeading.astro'

const { headings } = Astro.props

type TableOfContent = {
  depth: number
  text: string
  slug: string
  subheadings: TableOfContent[]
}

const targetHeadings: TableOfContent[] = headings.filter(
  (e: TableOfContent) => e.depth === 2 || e.depth === 3
)
const toc = buildToc(targetHeadings)
function buildToc(headings: TableOfContent[]) {
  let toc: TableOfContent[] = []
  let parentHeadings = new Map()
  headings.forEach((h) => {
    let heading = { ...h, subheadings: [] }
    parentHeadings.set(heading.depth, heading)
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 1 || heading.depth === 2) {
      toc.push(heading)
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading)
    }
  })
  return toc
}
---

<ul class='flex flex-col gap-1 [text-wrap:pretty]'>
  {toc.map((heading) => <TabletOfContentsHeading heading={heading} />)}
</ul>
