---
import BaseLayout from '@/layouts/BaseLayout'
import ListPosts from '@/components/widgets/ListPosts'
import ListCategories from '@/components/widgets/ListCategories'
import TitlePage from '@/components/widgets/TitlePage'
import { sluglify, unsluglify, getCategories, getPosts, getCategoryDescriptions } from '@/utils'
import { siteConfig } from '@/data/site.config'
import Pagination from '@/components/widgets/Pagination'

export async function getStaticPaths({ paginate }: any) {
  const categories = getCategories()
  const allPosts = await getPosts()

  return categories.flatMap((category: string) => {
    const unsluglifyNameCategory = unsluglify(category!.toLowerCase())
    const filteredPosts =
      category === 'ALL'
        ? allPosts
        : allPosts.filter((post) => post.data.category[0].toLowerCase() === unsluglifyNameCategory)

    return paginate(filteredPosts, {
      params: {
        category: sluglify(category.toLowerCase())
      },
      pageSize: siteConfig.paginationSize
    })
  })
}
const params = Astro.params
const { page } = Astro.props

const unsluglifyNameCategory = unsluglify(params.category!.toLowerCase())
const posts = page.data
const title = `「${unsluglifyNameCategory.toUpperCase()}」の${page.currentPage}ページ目`
const descriptions = getCategoryDescriptions()
const description = `このページは、「${unsluglifyNameCategory.toUpperCase()}」カテゴリの${page.currentPage}ページ目。このカテゴリは、${descriptions[unsluglifyNameCategory.toUpperCase()]}`
---

<BaseLayout title={title} description={description}>
  <TitlePage title={title} />
  <ListCategories activeCategory={params.category} />
  <ListPosts posts={posts} />
  <Pagination page={page} />
</BaseLayout>
