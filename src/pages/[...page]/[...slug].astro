---
import BlogPost from '@/layouts/BlogPost'
import CodeBlock from '@/components/mdx/CodeBlock'
import Table from '@/components/mdx/Table'
import ListRelatedPosts from '@/components/widgets/ListRelatedPosts'
import Share from '@/components/ui/Share'
import TableOfContentsDetails from '@/components/widgets/TableOfContentsDetails'
import { getPermalink, getPosts } from '@/utils'
import SButton from '@/components/mdx/SButton'
import Disqus from '@/components/widgets/Disqus'
import { disqusConfig } from '@/data/disqus.config'
import BlogImage from '@/components/mdx/BlogImage'
import Tag from '@/components/ui/Tag'
import ToTopIcon from '@/components/icons/ToTopIcon'
import ArrowLeft from '@/components/icons/ArrowLeft'
import ArrowRight from '@/components/icons/ArrowRight'
import '../../styles/blockquote.css'

const posts = await getPosts()

export async function getStaticPaths() {
  const posts = await getPosts()
  const postsLength = posts.length

  return posts.map((post, i) => ({
    params: { slug: post.slug },
    props: {
      post,
      prevPost: i + 1 === postsLength ? undefined : posts[i + 1],
      nextPost: i === 0 ? undefined : posts[i - 1]
    }
  }))
}

const { post, prevPost, nextPost } = Astro.props
const { slug } = post
const tags = post.data.tags
const MAX_POSTS = 6
const { Content, headings, remarkPluginFrontmatter } = await post.render()
const disqusEnabled = disqusConfig.enabled
---

<BlogPost
  id={post.id}
  data={post.data}
  headings={headings}
  readTime={remarkPluginFrontmatter.minutesRead}
>
  <div class='mt-8 grid w-full grid-cols-1 gap-10 md:grid-cols-[20%_auto] md:gap-4 lg:gap-6'>
    <!-- aside  -->
    <aside class='flex-col gap-8 md:flex'>
      <div
        class='sticky top-2 w-full self-start overflow-auto pr-2 transition-all duration-200 md:block md:max-h-screen'
      >
        <Share title={post.data.title} />
        {headings && headings.length > 0 && <TableOfContentsDetails {headings} />}
        <button
          id='toTop-button-md'
          class='mb-12 mt-4 hidden w-full place-items-center gap-1 no-underline md:flex'
        >
          <ToTopIcon />
          <p class='m-0 p-0'>トップへ戻る</p>
        </button>
      </div>
    </aside>

    <!-- post -->
    <article class='w-full max-w-full'>
      <div class='prose prose-quoteless mb-12 min-w-full dark:prose-invert md:prose-lg xl:prose-xl'>
        <Content components={{ 'code-block': CodeBlock, SButton, img: BlogImage, table: Table }} />
      </div>

      <div class='my-8'>
        <Share title={post.data.title} heading='' />
      </div>

      <div class='mb-16 flex flex-wrap gap-2 gap-y-4 md:gap-5'>
        {tags.map((tag: string) => <Tag tag={tag} />)}
      </div>

      <!-- related posts -->
      <footer>
        <h2 class='mb-6 border-t border-t-gray-300 pt-6 text-lg font-bold dark:text-white'>
          閲覧した記事からのおすすめ
        </h2>
        <ListRelatedPosts slug={slug} tags={tags} maxPosts={MAX_POSTS} />
        <div
          class='gird-rows-2 mt-16 grid w-full justify-between gap-4 border-t border-t-gray-300 pt-6 text-black dark:text-white md:grid-cols-2 md:gap-2'
        >
          <!-- Next Button -->
          {
            nextPost ? (
              <a
                href={getPermalink(nextPost.slug, 'post')}
                class='flex max-h-14 w-full gap-1 rounded-lg border border-gray-300 p-4 hover:bg-gray-100 hover:text-gray-700  dark:border-gray-700 dark:bg-transparent dark:hover:bg-gray-700 dark:hover:text-white'
              >
                <sapn class='w-6'>
                  <ArrowLeft />
                </sapn>
                <span class='line-clamp-1 overflow-hidden text-sm'>{nextPost.data.title}</span>
              </a>
            ) : (
              <span />
            )
          }

          <!-- Previous Button -->
          {
            prevPost ? (
              <a
                href={getPermalink(prevPost.slug, 'post')}
                class='flex max-h-14 w-full gap-1 rounded-lg border border-gray-300 p-4 hover:bg-gray-100  hover:text-gray-700 dark:border-gray-700 dark:bg-transparent dark:hover:bg-gray-700 dark:hover:text-white'
              >
                <span class='line-clamp-1 overflow-hidden text-sm'>{prevPost.data.title}</span>
                <sapn class='w-6'>
                  <ArrowRight />
                </sapn>
              </a>
            ) : (
              <span />
            )
          }
        </div>
      </footer>
    </article>
  </div>

  {disqusEnabled && <Disqus />}
</BlogPost>

<script>
  const toTopScroll = () => {
    const toTopBtn = document.getElementById('toTop-button-md') as HTMLButtonElement

    toTopBtn &&
      toTopBtn.addEventListener('click', function () {
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        })
      })
  }
  toTopScroll()
  document.addEventListener('astro:after-swap', toTopScroll)
</script>

<style is:global>
  lite-youtube {
    @apply my-8;
  }
</style>
